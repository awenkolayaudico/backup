{
    "marketplace_page_title": "Marketplace",
    "marketplace_install_btn": "Install dari Zip...",
    "marketplace_disable_btn": "Nonaktifkan Pilihan",
    "marketplace_enable_btn": "Aktifkan Pilihan",
    "marketplace_uninstall_btn": "Copot Pilihan",
    "marketplace_tab_modules": "Modul",
    "marketplace_tab_plugins": "Plugin",
    "marketplace_tab_widgets": "Widget",
    "marketplace_col_name": "Nama",
    "marketplace_col_version": "Versi",
    "marketplace_col_status": "Status",
    "marketplace_restart_needed": "Aksi berhasil. Restart aplikasi diperlukan agar perubahan berlaku sepenuhnya.",
    "marketplace_uninstall_confirm": "Anda yakin ingin mencopot '{component_name}'? Aksi ini tidak bisa dibatalkan.",
    "marketplace_install_dialog_title": "Pilih File Zip Komponen",
    "menu_title_prompt_manager": "Manajer Prompt",
    "prompt_manager_editor_title": "Editor Prompt",
    "prompt_manager_name_label": "Nama Template:",
    "prompt_manager_content_label": "Isi Template:",
    "button_save_changes": "Simpan Perubahan",
    "prompt_manager_tutorial_title": "Panduan & Cara Penggunaan",
    "prompt_manager_tutorial_content": "**Konsep:**\nManajer Prompt adalah \"buku resep\" Anda untuk AI. Simpan template prompt yang kompleks dan sering digunakan di sini agar bisa dipakai kembali di banyak workflow.\n\n**Cara Penggunaan:**\n1.  **Buat Baru:** Klik 'New' untuk membuat template kosong.\n2.  **Isi Detail:** Beri 'Nama Template' yang deskriptif dan tulis isi prompt di area 'Template Content'.\n3.  **Gunakan Variabel:** Anda bisa memasukkan placeholder dinamis seperti `{objective}` atau `{user_input}` di dalam konten. Placeholder ini nantinya akan diisi oleh data dari payload saat workflow berjalan.\n4.  **Simpan:** Klik 'Save Changes' untuk menyimpan template Anda ke database.\n5.  **Gunakan di Workflow:** Di kanvas, gunakan modul 'Prompt Template' untuk memilih dan memuat template yang sudah Anda simpan.",
    "model_converter_guide_title": "Panduan & Konsep Model Factory",
    "model_converter_guide_content": "**PENTING: JEMBATAN DARI TRAINING KE PENGGUNAAN**\nSetelah Anda melatih (fine-tuning) model AI menggunakan **AI Trainer**, hasilnya adalah sebuah **folder model Hugging Face (HF)**. Folder ini belum bisa langsung digunakan oleh Flowork untuk inferensi (menjalankan tugas). Anda **WAJIB** menggunakan halaman ini untuk mengubahnya menjadi format **GGUF** yang efisien.\n\n**Konsep:**\nModel Factory adalah \"pabrik\" Anda untuk mengubah dan mengoptimalkan model AI agar efisien dijalankan secara lokal. Proses utamanya adalah **kuantisasi**, yaitu mengecilkan ukuran model dengan presisi minimal agar jauh lebih cepat dan hemat memori.\n\n**Tab 1: Convert HF to GGUF**\nGunakan ini untuk model hasil **AI Trainer** atau model yang Anda download dari Hugging Face.\n1.  **Fine-Tuned Model Folder:** Pilih folder model HF yang sudah Anda siapkan di `ai_models/text`.\n2.  **New .gguf Filename:** Beri nama untuk file hasil konversi (tanpa `.gguf`).\n3.  **Quantization Method:** Pilih tingkat kompresi. **Q4_K_M** adalah pilihan seimbang antara ukuran dan kualitas.\n\n**Tab 2: Re-Quantize Existing GGUF**\nGunakan ini jika Anda sudah punya file `.gguf` tapi ingin membuatnya lebih kecil lagi.\n1.  **Source .gguf File:** Pilih file `.gguf` yang ingin Anda kuantisasi ulang.\n2.  **New Quantized Filename:** Beri nama baru untuk file hasil kuantisasi.",
    "ai_trainer_guide_title": "Panduan & Alur Kerja Pelatihan AI",
    "ai_trainer_guide_content": "**Konsep:**\nAI Trainer adalah fasilitas Anda untuk melakukan *fine-tuning*—melatih ulang model AI yang sudah ada dengan data spesifik Anda. Tujuannya adalah membuat AI menjadi \"ahli\" dalam topik atau gaya tertentu yang Anda inginkan.\n\n**Alur Kerja Pelatihan (WAJIB DIIKUTI):**\n1.  **Siapkan Data (di sini):**\n    - Buat dataset baru (misal: `data_latihan_chatbot`).\n    - Isi dataset dengan format `pertanyaan;jawaban` per baris. Semakin banyak dan berkualitas data Anda, semakin pintar AI-nya.\n2.  **Latih Model (di sini):**\n    - Pilih 'Base Model' (model dasar untuk dilatih).\n    - Pilih 'Dataset' yang sudah Anda siapkan.\n    - Beri nama untuk model baru Anda (misal: `chatbot_v1`).\n    - Klik 'Start Fine-Tuning Job'. Proses ini akan menghasilkan sebuah **folder model** di `ai_models/text/chatbot_v1`.\n3.  **Konversi Model (di Model Factory):**\n    - **INI LANGKAH KRUSIAL.** Model hasil training belum bisa dipakai.\n    - Buka halaman **Model Factory** -> tab **Convert HF to GGUF**.\n    - Pilih folder model Anda (`chatbot_v1`).\n    - Beri nama file output (misal: `chatbot_v1_q4`).\n    - Klik 'Start Conversion'. Proses ini akan menghasilkan satu file: `chatbot_v1_q4.gguf`.\n4.  **Gunakan Model:**\n    - File `chatbot_v1_q4.gguf` inilah yang sekarang bisa Anda pilih dan gunakan di modul-modul AI di dalam Flowork.",
    "generator_guide_title": "Panduan Module Factory",
    "generator_guide_content": "**Konsep:**\nModule Factory adalah \"bengkel\" canggih Anda untuk menciptakan modul Flowork Anda sendiri tanpa perlu menulis banyak kode boilerplate. Anda bisa merancang antarmuka properti (UI) secara visual dan mendefinisikan logikanya.\n\n**Alur Kerja Pembuatan Modul:**\n1.  **Desain Properti (Tab 1 - Kiri):**\n    - Drag & drop komponen UI dari Toolbox ke kanvas desain.\n    - Klik komponen di kanvas untuk mengedit propertinya di panel kanan bawah (ID, Label, dll).\n    - ID akan menjadi kunci di `config` saat modul dieksekusi.\n2.  **Desain Logika (Tab 2 - Kiri):**\n    - Rancang alur logika internal modul Anda di kanvas ini.\n    - Gunakan node `Set Variabel` sebagai input untuk mengambil nilai dari properti yang Anda desain. Contoh: `config.get('id_komponen_anda')`.\n    - Hasil akhir dari alur logika ini akan menjadi output dari modul Anda.\n3.  **Isi Info Modul (Panel Kanan Atas):**\n    - Beri nama, deskripsi, dan info pembuat modul Anda. ID Unik akan dibuat secara otomatis.\n4.  **Finalisasi & Generate (Panel Kanan Bawah):**\n    - Klik tombol 'Generate Module ZIP File'.\n    - Beri nama dan simpan file .zip Anda.\n5.  **Instalasi:**\n    - Buka halaman **Addon Manager**, klik 'Install from Zip...', dan pilih file .zip yang baru saja Anda buat.",
    "core_editor_guide_title": "Panduan & Konsep Core Editor",
    "core_editor_guide_content": "**Konsep Inti:**\nCore Editor adalah mode \"Meta-Developer\". Di sini, kamu tidak membuat workflow biasa, tapi kamu mendesain **logika internal dari sebuah Service** itu sendiri. Service yang kamu buat di sini akan dimuat oleh Kernel saat aplikasi pertama kali berjalan.\n\n**Anatomi Service:**\n- **Nama File (`nama_service.flowork`):** Akan menjadi dasar nama Class Python (misal: `NamaServiceService`).\n- **Setiap Alur (Flow):** Setiap alur yang tidak memiliki input (node awal) akan diterjemahkan menjadi sebuah **method** di dalam Class Service tersebut. Nama method diambil dari nama node awal.\n- **Return Value:** Nilai `payload` dari node terakhir di sebuah alur akan menjadi `return value` dari method tersebut.\n\n**Alur Kerja Desain:**\n1.  **Pilih Service:** Pilih file `.flowork` dari dropdown di atas.\n2.  **Rancang Logika:** Drag & drop modul dari Toolbox ke kanvas untuk membangun logika method.\n3.  **Gunakan `Function Runner (Nano)`:** Modul ini adalah pekerja utamamu. Kode Python di dalamnya akan menjadi isi dari method servicemu. Variabel `payload`, `log`, `kernel`, dan `args` sudah tersedia otomatis.\n4.  **Simpan Perubahan:** Klik tombol \"Save Changes\". Ini akan menulis ulang file `.flowork`.\n5.  **Kompilasi!:** Buka modul `Core Compiler`, pilih service yang baru kamu edit, dan jalankan. Ini akan meng-generate ulang file `service.py` di folder `generated_services`.\n\n**PERINGATAN PENTING:**\nKarena kamu mengedit logika inti, kesalahan di sini bisa menyebabkan **aplikasi gagal startup**. Selalu backup file `.flowork` sebelum melakukan perubahan besar.",
    "ai_architect_guide_title": "Panduan AI Architect",
    "ai_architect_guide_content": "**Konsep Inti:**\nAI Architect adalah \"penerjemah\" ajaibmu. Ia mengubah perintah bahasa manusia biasa menjadi sebuah alur kerja (workflow) visual yang siap pakai. Kamu cukup jelaskan apa yang kamu mau, dan AI akan mencoba merancang nodenya untukmu.\n\n**SYARAT UTAMA (WAJIB!):**\nFitur ini **bergantung penuh** pada model AI yang kamu atur di halaman **Settings -> Default AI Model Configuration -> Text & Analysis**. Pastikan kamu sudah memilih provider AI (seperti Gemini) atau model GGUF lokal di sana. Jika tidak, AI Architect tidak akan tahu harus bertanya ke siapa dan akan gagal.\n\n**Cara Penggunaan:**\n1.  **Tulis Perintah:** Di kotak teks utama, tuliskan tujuan alur kerjamu secara jelas.\n2.  **Klik Generate:** Tekan tombol \"🚀 Generate Workflow\".\n3.  **Tunggu:** AI akan berpikir dan merancang alur kerja. Proses ini mungkin butuh beberapa saat.\n4.  **Tab Baru:** Jika berhasil, sebuah tab baru akan terbuka dengan alur kerja yang sudah jadi.\n\n**Tips untuk Prompt yang Efektif:**\n-   **Spesifik:** Semakin detail perintahmu, semakin baik hasilnya. Sebutkan nama modul jika kamu tahu (misal: \"gunakan *Advanced Web Scraper*\").\n-   **Sebutkan URL:** Jika melibatkan web, sebutkan URL lengkapnya (misal: \"dari situs *detik.com*\").\n-   **Urutan Jelas:** Jelaskan langkah demi langkah. Contoh: \"Pertama, ambil data dari API. Kedua, filter data yang mengandung kata 'penting'. Ketiga, simpan hasilnya ke file CSV.\"",
    "button_new": "Baru",
    "button_delete": "Hapus",
    "marketplace_install_community_btn": "Install dari Komunitas",
    "theme_manager_guide_title": "Panduan Manajer Tema",
    "theme_manager_guide_content": "**Konsep:**\nDi sinilah Anda mengelola tampilan dan nuansa aplikasi Flowork Anda. Tema adalah file `.json` sederhana yang mendefinisikan palet warna untuk semua komponen UI.\n\n**Cara Penggunaan:**\n1.  **Melihat Tema:** Semua tema yang terinstal akan muncul di daftar.\n2.  **Mengedit Tema:** Klik ikon pensil (✏️) untuk membuka file `.json` tema di editor teks default Anda. Anda bisa mengubah nilai hex warna di sana. Simpan file untuk melihat perubahan (mungkin perlu me-restart aplikasi).\n3.  **Menghapus Tema:** Klik ikon silang (❌) untuk menghapus tema. Tema default tidak bisa dihapus.\n4.  **Mengunggah Tema Baru:** Gunakan tombol 'Unggah Tema' untuk menambahkan file `.json` tema baru dari komputer Anda.\n\n**Tips:**\n-   Anda bisa menduplikasi file tema yang ada, mengganti namanya, dan mengeditnya untuk membuat tema baru dengan cepat.\n-   Bagikan file `.json` tema Anda dengan pengguna lain!",
    "diagnostics_guide_title": "Panduan Diagnostik Sistem",
    "diagnostics_guide_content": "**Konsep:**\nIni adalah \"ruang mesin\" Flowork. Alat ini menjalankan serangkaian pemindaian otomatis untuk memeriksa \"kesehatan\" dan integritas kode internal aplikasi, manifest, dan cache.\n\n**Tujuan:**\n-   **Menemukan Regresi:** Memastikan pembaruan atau perubahan baru tidak merusak arsitektur inti yang sudah stabil.\n-   **Menjaga Kualitas Kode:** Secara otomatis mendeteksi jika ada modul yang tidak mengikuti standar (misalnya, tidak punya atribut `TIER`).\n-   **Debugging Lanjutan:** Membantu developer menemukan masalah tersembunyi seperti file yang hilang atau cache yang rusak.\n\n**Cara Penggunaan:**\n1.  **Pilih Scanner:** Centang pemindai mana yang ingin Anda jalankan dari daftar di kiri.\n2.  **Jalankan Scan:** Klik 'Run Selected' atau 'Run All'.\n3.  **Lihat Laporan:** Hasilnya akan muncul di panel kanan. Perhatikan levelnya: **CRITICAL** dan **MAJOR** adalah masalah serius yang harus segera diperbaiki."
}