{
    "event_bus_trigger_name": "Internal Event Bus Trigger",
    "event_bus_trigger_desc": "Creates reactive workflows. This trigger listens for 'signals' or 'events' published by other modules, allowing you to build interconnected and intelligent systems.",
    "event_bus_trigger_tutorial": "**Concept:**\nThe Event Bus is a central message board. One module (the 'Publisher') can shout a message (an event), and this trigger (the 'Subscriber') will hear it if it's interested in the message topic.\n\n**How to Use:**\n1. In one workflow, use the 'Publish Event' module to send a signal when an important task is complete. Give the event a clear name, e.g., `PROCESS_A_COMPLETE`.\n2. In the Trigger Manager page, create a new Rule using this trigger.\n3. In its properties, enter the exact same event name (`PROCESS_A_COMPLETE`).\n4. Select another workflow that you want to run in response.\n\n**Optimization Examples:**\n- **Chained Workflows:** Automatically run the 'Process B' workflow ONLY IF the 'Process A' workflow has completed successfully and published an event.\n- **Centralized Notifications:** Several different workflows can publish a `SEND_CRITICAL_NOTIFICATION` event, and a single workflow triggered by this event is responsible for sending it to Telegram."
}